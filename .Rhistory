#Add step 2 in which X is demeaned, and 3 in which both X and Y are, and 4 which just changes label
dffull2 <- rbind(
#Step 1: Raw data only
phones3 %>% mutate(mean_phones=NA,mean_deaths=NA,time=before_cor),
#Step 2: Add x-lines
phones3 %>% mutate(mean_deaths=NA,time='2. Figure out any between-State differences in cell plans'),
#Step 3: X de-meaned
phones3 %>% mutate(cell_plans = cell_plans - mean_phones,mean_phones=0,mean_deaths=NA,time="3. Remove all between-State differences in cell plans"),
#Step 4: Remove X lines, add Y
phones3 %>% mutate(cell_plans = cell_plans - mean_phones,mean_phones=NA,time="4. Figure out any between-State differences in deaths"),
#Step 5: Y de-meaned
phones3 %>% mutate(cell_plans = cell_plans - mean_phones,deaths = deaths - mean_deaths,mean_phones=NA,mean_deaths=0,time="5. Remove all between-State differences in deaths"),
#Step 6: Raw demeaned data only
phones3 %>% mutate(cell_plans = cell_plans - mean_phones,deaths = deaths - mean_deaths,mean_phones=NA,mean_deaths=NA,time=after_cor))
## ---- cache = F, fig.align="center", fig.width=15----
p2 <- ggplot(dffull2,aes(y=deaths,x=cell_plans,color=as.factor(state)))+geom_point()+
geom_vline(aes(xintercept=mean_phones,color=as.factor(state)))+
geom_hline(aes(yintercept=mean_deaths,color=as.factor(state)))+
labs(x = "Cell Phones Per 10,000 People",
y = "Deaths Per Billion Miles Driven",
title = 'The Relationship between Cell Plans and Deaths, with State Fixed Effects \n{next_state}',
caption = "Animation inspired by Nick Huntington-Kleinâ€™s Causal Animations")+
theme_bw(base_family = "Fira Sans Condensed", base_size = 12)+
theme(legend.position = "none")+
transition_states(time,transition_length=c(12,32,12,32,12,12),state_length=c(160,100,75,100,75,160),wrap=FALSE)+
ease_aes('sine-in-out')+
exit_fade()+enter_fade()
animate(p2,nframes=200)
## ----plm-fe, echo=T----------------------------
#install.packages("plm")
library(plm)
fe_reg_1_alt<-plm(deaths ~ cell_plans,
data = phones,
index = "state",
model = "within")
## ---- echo=T-----------------------------------
fe_reg_1_alt %>% tidy()
## ----------------------------------------------
library(ggdag)
dagify(Deaths~Phones+State+Macro+FedLaw,
Phones~State+Macro+FedLaw,
coords = list(x = c(Phones = 1, Macro = 2, State = 3, FedLaw = 4, Deaths = 5),
y = c(Phones = 0, Macro = 1, State = -1, FedLaw = 1, Geog = 1, Pop = -1, Deaths = 0)),
exposure = "Phones",
outcome = "Deaths") %>%
tidy_dagitty(seed = 20) %>%
ggdag_status()+theme_dag()+theme(legend.position = "none")
## ----------------------------------------------
dagify(Deaths~Phones+State+Year,
Phones~State+Year,
coords = list(x = c(Phones = 1, State = 3, Year = 3, Deaths = 5),
y = c(Phones = 0, State = -1, Year = 1, Deaths = 0)),
exposure = "Phones",
outcome = "Deaths") %>%
tidy_dagitty(seed = 20) %>%
ggdag_status()+theme_dag()+theme(legend.position = "none")
## ---- echo=T-----------------------------------
# find averages for years
means_year<-phones %>%
group_by(year) %>%
summarize(avg_deaths = mean(deaths),
avg_phones = mean(cell_plans))
means_year
## ----fe2-reg, echo=T, eval=T-------------------
fe2_reg_1 <- lm(deaths ~ cell_plans + state + year,
data = phones)
fe2_reg_1 %>% tidy()
## ----fe2-reg2, echo=T, eval=T------------------
fe2_reg_2 <- plm(deaths ~ cell_plans,
index = c("state", "year"),
model = "within",
data = phones)
fe2_reg_2 %>% tidy()
## ----------------------------------------------
dagify(Deaths~Phones+State+Year+Bans+Urban,
Phones~State+Year+Bans+Urban,
coords = list(x = c(Phones = 1, Bans = 2, State = 2, Year = 4, Urban = 4, Deaths = 5),
y = c(Phones = 0, Bans = 1, State = -1, Year = -1, Urban = 1, Deaths = 0)),
exposure = "Phones",
outcome = "Deaths") %>%
tidy_dagitty(seed = 20) %>%
ggdag_status()+theme_dag()+theme(legend.position = "none")
## ---- echo=T-----------------------------------
fe2_controls_reg <- plm(deaths ~ cell_plans + text_ban + urban_percent + cell_ban,
data = phones,
index = c("state","year"),
model = "within",
effect = "twoways")
fe2_controls_reg %>% tidy()
## ----huxout, echo=T, eval =F-------------------
library(huxtable)
huxreg("Pooled" = pooled,
"State Effects" = fe_reg_1,
"State & Year Effects" = fe2_reg_1,
"With Controls" = fe2_controls_reg,
coefs = c("Intercept" = "(Intercept)",
"Cell phones" = "cell_plans",
"Cell Ban" = "cell_ban1",
"Texting Ban" = "text_ban1",
"Urbanization Rate" = "urban_percent"),
statistics = c("N" = "nobs",
"R-Squared" = "r.squared",
"SER" = "sigma"),
number_format = 4)
## ---- ref.label="huxout"-----------------------
huxout
huxreg("Pooled" = pooled,
"State Effects" = fe_reg_1,
"State & Year Effects" = fe2_reg_1,
"With Controls" = fe2_controls_reg,
coefs = c("Intercept" = "(Intercept)",
"Cell phones" = "cell_plans",
"Cell Ban" = "cell_ban1",
"Texting Ban" = "text_ban1",
"Urbanization Rate" = "urban_percent"),
statistics = c("N" = "nobs",
"R-Squared" = "r.squared",
"SER" = "sigma"),
number_format = 4)
hmda <- read_stata("hmda_sw.dta")
library(tidyverse)
library(haven)
hmda <- read_stata("hmda_sw.dta")
# create the variables of interest
hmda$deny = ifelse(hmda$s7==3, 1, 0)
# create the variables of interest
View(hmda)
hmda$deny = ifelse(hmda$s7==3, 1, 0)
hmda$pi_ratio = hmda$s46/100
hmda$black = ifelse(hmda$s13==3, 1, 0)
library(ggplot2)
figure11_1 = ggplot(data=hmda, aes(x=pi_ratio, y=deny))
figure11_1 = figure11_1 +
geom_point(alpha=0.2, size=1) +
geom_smooth(method="lm", se=F) +
ylim(-0.4,1.4) + scale_x_continuous(breaks = seq(0,3,0.5)) +
labs(x="P/I Ratio", y="Deny") +
annotate("text",x=2.5,y=0.9,label="Mortgage denied") +
annotate("text",x=2.5,y=-0.1,label="Mortgage approved") +
theme_bw()
figure11_1
hmda_s1 = dplyr::sample_n(filter(hmda,s13==3 & s7==3 & s46/100<1), 35)
hmda_s2 = dplyr::sample_n(filter(hmda,s13==3 & s46/100<1), 15)
hmda_s3 = dplyr::sample_n(filter(hmda,s13==5 & s46/100<1), 50)
hmda_s = rbind(hmda_s1, hmda_s2, hmda_s3)
# create the variables of interest
hmda_s$deny = ifelse(hmda_s$s7==3, 1, 0)
hmda_s$pi_ratio = hmda_s$s46/100
hmda_s$black = ifelse(hmda_s$s13==3, 1, 0)
figure11_1mod = ggplot(data=hmda_s, aes(x=pi_ratio, y=deny))
figure11_1mod = figure11_1mod +
geom_point(size=2, shape=1) +
geom_smooth(method="lm", se=F) +
ylim(-0.4,1.4) + scale_x_continuous(breaks = seq(0,1,0.1)) +
labs(x="P/I Ratio", y="Deny") +
annotate("text",x=0.6,y=1.1,label="Mortgage denied") +
annotate("text",x=0.6,y=-0.1,label="Mortgage approved") +
annotate("label",x=0.3,y=0.5,label="LPM") +
theme_bw()
library(lmtest)
library(sandwich)
LPM = lm(deny ~ pi_ratio, data=hmda)
coeftest(LPM, vcov = sandwich)
LPM2 = lm(deny ~ pi_ratio + black, data=hmda)
coeftest(LPM2, vcov=sandwich)
figure11_3mod = ggplot(data=hmda_s, aes(x=pi_ratio, y=deny))
figure11_3probit = figure11_3mod +
geom_point(shape=1, size=2) +
geom_smooth(method="glm",
method.args=list(family=binomial(link="probit")),
se=F) +
ylim(-0.4,1.4) +
scale_x_continuous(breaks = seq(0,1,0.1)) +
labs(x="P/I Ratio", y="Deny") +
annotate("label",x=0.3,y=0.5,label="Probit Regression") +
theme_bw()
figure11_3probit
## Probit Regression
probit = glm(
deny ~ black + pi_ratio,
data=hmda,
family=binomial(link="logit"))
coeftest(probit, vcov=sandwich)
figure11_3logit = figure11_3mod +
geom_point(shape=1, size=2) +
geom_smooth(method="glm",
method.args=list(family=binomial(link="probit")),
se=F) +
geom_smooth(method="glm",
method.args=list(family=binomial(link="logit")),
se=F,
color="red") +
ylim(-0.4,1.4) +
scale_x_continuous(breaks = seq(0,1,0.1)) +
labs(x="P/I Ratio", y="Deny") +
annotate("label",x=0.3,y=0.5,label="Logit Regression \n(in red)") +
theme_bw()
figure11_3mod
figure11_3logit
# rename and create some variables for regression
hmda$hse_inc = hmda$s45/100
hmda$loan_val = hmda$s6/hmda$s50
hmda$ccred = hmda$s43
hmda$mcred = hmda$s42
hmda$pubrec = ifelse(hmda$s44>0,1,0)
hmda$denpmi = ifelse(hmda$s53==1,1,0)
hmda$selfemp = ifelse(hmda$s27a==1,1,0)
hmda$married = ifelse(hmda$s23a=="M",1,0)
hmda$single = ifelse(hmda$married==0,1,0)
hmda$hischl = ifelse(hmda$school>=12,1,0)
hmda$probunmp = hmda$uria
hmda$condo = ifelse(hmda$s51 == 1,1,0)
## Table 11.2: LPM, Logit, and Probit regressions
# LPM
model_1 = lm(
deny ~ black + pi_ratio + hse_inc + loan_val + ccred +
mcred + pubrec + + denpmi + selfemp,
data=hmda)
# Logit
model_2 = glm(
deny ~ black + pi_ratio + hse_inc + loan_val + ccred +
mcred + pubrec + + denpmi + selfemp,
data=hmda,
family=binomial(link="logit"))
# Probit
model_3 = glm(
deny ~ black + pi_ratio + hse_inc + loan_val + ccred +
mcred + pubrec + + denpmi + selfemp,
data=hmda,
family=binomial(link="probit"))
library(modelsummary)
modelsummary(list(model_1,model_2,model_2))
vtable(hmda)
library(vtable)
vtable(hmda)
library(tidyverse)
library(haven)
hmda <- read_stata("hmda_sw.dta")
hmda<-hmda %>% mutate(deny=ifelse(s7==3,1,0),pi_ratio=s46/100, black=ifelse(s13==3,1,0))
# create the variables of interest
View(hmda)
library(ggplot2)
figure11_1 = ggplot(data=hmda, aes(x=pi_ratio, y=deny))
figure11_1 = figure11_1 +
geom_point(alpha=0.2, size=1) +
geom_smooth(method="lm", se=F) +
ylim(-0.4,1.4) + scale_x_continuous(breaks = seq(0,3,0.5)) +
labs(x="P/I Ratio", y="Deny") +
annotate("text",x=2.5,y=0.9,label="Mortgage denied") +
annotate("text",x=2.5,y=-0.1,label="Mortgage approved") +
theme_bw()
figure11_1
#### Trimming the data
# sample of the HMDA data with 150 observations
library(dplyr)
hmda_s1 = dplyr::sample_n(filter(hmda,s13==3 & s7==3 & s46/100<1), 35)
hmda_s2 = dplyr::sample_n(filter(hmda,s13==3 & s46/100<1), 15)
hmda_s3 = dplyr::sample_n(filter(hmda,s13==5 & s46/100<1), 50)
hmda_s = rbind(hmda_s1, hmda_s2, hmda_s3)
# create the variables of interest
hmda_s$deny = ifelse(hmda_s$s7==3, 1, 0)
hmda_s$pi_ratio = hmda_s$s46/100
hmda_s$black = ifelse(hmda_s$s13==3, 1, 0)
figure11_1mod = ggplot(data=hmda_s, aes(x=pi_ratio, y=deny))
figure11_1mod = figure11_1mod +
geom_point(size=2, shape=1) +
geom_smooth(method="lm", se=F) +
ylim(-0.4,1.4) + scale_x_continuous(breaks = seq(0,1,0.1)) +
labs(x="P/I Ratio", y="Deny") +
annotate("text",x=0.6,y=1.1,label="Mortgage denied") +
annotate("text",x=0.6,y=-0.1,label="Mortgage approved") +
annotate("label",x=0.3,y=0.5,label="LPM") +
theme_bw()
figure11_1mod
library(lmtest)
library(sandwich)
LPM = lm(deny ~ pi_ratio, data=hmda)
coeftest(LPM, vcov = sandwich)
library(tidyverse)
library(haven)
hmda <- read_stata("hmda_sw.dta")
library(vtable)
vtable(hmda)
glimpse(hmda)
hmda<-hmda %>% mutate(deny=ifelse(s7==3,1,0),pi_ratio=s46/100,
black=ifelse(s13==3,1,0))
glimpse(hmda)
#hmda$deny = ifelse(hmda$s7==3, 1, 0)
#hmda$pi_ratio = hmda$s46/100
#hmda$black = ifelse(hmda$s13==3, 1, 0)
library(ggplot2)
figure11_1 = ggplot(data=hmda, aes(x=pi_ratio, y=deny))
figure11_1 = figure11_1 +
geom_point(alpha=0.2, size=1) +
geom_smooth(method="lm", se=F) +
ylim(-0.4,1.4) + scale_x_continuous(breaks = seq(0,3,0.5)) +
labs(x="P/I Ratio", y="Deny") +
annotate("text",x=2.5,y=0.9,label="Mortgage denied") +
annotate("text",x=2.5,y=-0.1,label="Mortgage approved") +
theme_bw()
figure11_1
#### Trimming the data
# sample of the HMDA data with 150 observations
library(dplyr)
hmda_s1 = dplyr::sample_n(filter(hmda,s13==3 & s7==3 & s46/100<1), 35)
hmda_s2 = dplyr::sample_n(filter(hmda,s13==3 & s46/100<1), 15)
hmda_s3 = dplyr::sample_n(filter(hmda,s13==5 & s46/100<1), 50)
hmda_s = rbind(hmda_s1, hmda_s2, hmda_s3)
# create the variables of interest
hmda_s$deny = ifelse(hmda_s$s7==3, 1, 0)
hmda_s$pi_ratio = hmda_s$s46/100
hmda_s$black = ifelse(hmda_s$s13==3, 1, 0)
figure11_1mod = ggplot(data=hmda_s, aes(x=pi_ratio, y=deny))
figure11_1mod = figure11_1mod +
geom_point(size=2, shape=1) +
geom_smooth(method="lm", se=F) +
ylim(-0.4,1.4) + scale_x_continuous(breaks = seq(0,1,0.1)) +
labs(x="P/I Ratio", y="Deny") +
annotate("text",x=0.6,y=1.1,label="Mortgage denied") +
annotate("text",x=0.6,y=-0.1,label="Mortgage approved") +
annotate("label",x=0.3,y=0.5,label="LPM") +
theme_bw()
figure11_1mod
library(lmtest)
library(sandwich)
LPM = lm(deny ~ pi_ratio, data=hmda)
coeftest(LPM, vcov = sandwich)
LPM2 = lm(deny ~ pi_ratio + black, data=hmda)
figure11_3mod = ggplot(data=hmda_s, aes(x=pi_ratio, y=deny))
figure11_3probit = figure11_3mod +
geom_point(shape=1, size=2) +
geom_smooth(method="glm",
method.args=list(family=binomial(link="probit")),
se=F) +
ylim(-0.4,1.4) +
scale_x_continuous(breaks = seq(0,1,0.1)) +
labs(x="P/I Ratio", y="Deny") +
annotate("label",x=0.3,y=0.5,label="Probit Regression") +
theme_bw()
figure11_3probit
## Probit Regression
probit = glm(
deny ~ black + pi_ratio,
data=hmda,
family=binomial(link="logit"))
coeftest(probit, vcov=sandwich)
figure11_3mod = ggplot(data=hmda_s, aes(x=pi_ratio, y=deny))
figure11_3logit = figure11_3mod +
geom_point(shape=1, size=2) +
geom_smooth(method="glm",
method.args=list(family=binomial(link="probit")),
se=F) +
geom_smooth(method="glm",
method.args=list(family=binomial(link="logit")),
se=F,
color="red") +
ylim(-0.4,1.4) +
scale_x_continuous(breaks = seq(0,1,0.1)) +
labs(x="P/I Ratio", y="Deny") +
annotate("label",x=0.3,y=0.5,label="Logit Regression \n(in red)") +
theme_bw()
figure11_3logit
# rename and create some variables for regression
hmda$hse_inc = hmda$s45/100
hmda$loan_val = hmda$s6/hmda$s50
hmda$ccred = hmda$s43
hmda$mcred = hmda$s42
hmda$pubrec = ifelse(hmda$s44>0,1,0)
hmda$denpmi = ifelse(hmda$s53==1,1,0)
hmda$selfemp = ifelse(hmda$s27a==1,1,0)
hmda$married = ifelse(hmda$s23a=="M",1,0)
hmda$single = ifelse(hmda$married==0,1,0)
hmda$hischl = ifelse(hmda$school>=12,1,0)
hmda$probunmp = hmda$uria
hmda$condo = ifelse(hmda$s51 == 1,1,0)
## Table 11.2: LPM, Logit, and Probit regressions
# LPM
model_1 = lm(
deny ~ black + pi_ratio + hse_inc + loan_val + ccred +
mcred + pubrec + + denpmi + selfemp,
data=hmda)
## Table 11.2: LPM, Logit, and Probit regressions
# LPM
model_1 = lm(
deny ~ black + pi_ratio + hse_inc + loan_val + ccred +
mcred + pubrec + + denpmi + selfemp,
data=hmda)
# Logit
model_2 = glm(
deny ~ black + pi_ratio + hse_inc + loan_val + ccred +
mcred + pubrec + + denpmi + selfemp,
data=hmda,
family=binomial(link="logit"))
# Probit
model_3 = glm(
deny ~ black + pi_ratio + hse_inc + loan_val + ccred +
mcred + pubrec + + denpmi + selfemp,
data=hmda,
family=binomial(link="probit"))
library(modelsummary)
modelsummary(list(model_1,model_2,model_2))
library(tidyverse)
library(haven)
hmda <- read_stata("hmda_sw.dta")
glimpse(hmda)
hmda_shotr<- hmda %>% select(s7,s13,s46)
hmda_short<- hmda %>% select(s7,s13,s46)
glimpse(hmda_short)
hmda<-hmda %>% mutate(deny=ifelse(s7==3,1,0),pi_ratio=s46/100,
black=ifelse(s13==3,1,0))
#hmda$deny = ifelse(hmda$s7==3, 1, 0)
#hmda$pi_ratio = hmda$s46/100
#hmda$black = ifelse(hmda$s13==3, 1, 0)
library(ggplot2)
#'
#' # Required Packages
#'
#' First, install the following two packages with the command `install.packages("tidyverse")` and `install.packages("gapminder")` in the console below.[^1] Alternatively, you will probably already get a yellow banner at the top of this file indicating you need to install the packages, and can install them by clicking `Install`. Don't install any package in an R chunk in this document, since it needs to be installed into R Studio.
#'
#' [^1]: Note that you can install multiple packages at the same time by combining the package names into a vector, like so: `install.packages(c("tidyverse", "gapminder")).`
#'
#' Then, load the package by running (clicking the green play button) the chunk below:
#'
## ---- load-packages-------------------
library("tidyverse") # my friend and yours
library("gapminder") # for dataset
gapminder <- gapminder # explicitly save data as a dataframe
figure11_1 = ggplot(data=hmda, aes(x=pi_ratio, y=deny))
figure11_1 = figure11_1 +
geom_point(alpha=0.2, size=1) +
geom_smooth(method="lm", se=F) +
ylim(-0.4,1.4) + scale_x_continuous(breaks = seq(0,3,0.5)) +
labs(x="P/I Ratio", y="Deny") +
annotate("text",x=2.5,y=0.9,label="Mortgage denied") +
annotate("text",x=2.5,y=-0.1,label="Mortgage approved") +
theme_bw()
figure11_1
LPM = lm(deny ~ pi_ratio, data=hmda)
coeftest(LPM, vcov = sandwich)
LPM2 = lm(deny ~ pi_ratio + black, data=hmda)
LPM2 = lm(deny ~ pi_ratio + black, data=hmda)
coeftest(LPM2, vcov=sandwich)
## Probit Regression
probit = glm(
deny ~ black + pi_ratio,
data=hmda,
family=binomial(link="logit"))
coeftest(probit, vcov=sandwich)
figure11_3mod = ggplot(data=hmda_s, aes(x=pi_ratio, y=deny))
figure11_3logit = figure11_3mod +
geom_point(shape=1, size=2) +
geom_smooth(method="glm",
method.args=list(family=binomial(link="probit")),
se=F) +
geom_smooth(method="glm",
method.args=list(family=binomial(link="logit")),
se=F,
color="red") +
ylim(-0.4,1.4) +
scale_x_continuous(breaks = seq(0,1,0.1)) +
labs(x="P/I Ratio", y="Deny") +
annotate("label",x=0.3,y=0.5,label="Logit Regression \n(in red)") +
theme_bw()
figure11_3logit
# rename and create some variables for regression
hmda$hse_inc = hmda$s45/100
# rename and create some variables for regression
hmda$hse_inc = hmda$s45/100
hmda$loan_val = hmda$s6/hmda$s50
hmda$ccred = hmda$s43
hmda$mcred = hmda$s42
hmda$pubrec = ifelse(hmda$s44>0,1,0)
# rename and create some variables for regression
hmda$hse_inc = hmda$s45/100
hmda$loan_val = hmda$s6/hmda$s50
hmda$ccred = hmda$s43
hmda$mcred = hmda$s42
hmda$pubrec = ifelse(hmda$s44>0,1,0)
hmda$denpmi = ifelse(hmda$s53==1,1,0)
hmda$selfemp = ifelse(hmda$s27a==1,1,0)
hmda$married = ifelse(hmda$s23a=="M",1,0)
hmda$single = ifelse(hmda$married==0,1,0)
hmda$hischl = ifelse(hmda$school>=12,1,0)
hmda$probunmp = hmda$uria
hmda$condo = ifelse(hmda$s51 == 1,1,0)
## Table 11.2: LPM, Logit, and Probit regressions
# LPM
model_1 = lm(
deny ~ black + pi_ratio + hse_inc + loan_val + ccred +
mcred + pubrec + + denpmi + selfemp,
data=hmda)
# Logit
model_2 = glm(
deny ~ black + pi_ratio + hse_inc + loan_val + ccred +
mcred + pubrec + + denpmi + selfemp,
data=hmda,
family=binomial(link="logit"))
library(modelsummary)
modelsummary(list(model_1,model_2,model_2))
paste("Ryan", "Safner")
# note you can choose how to separate string objects with the "sep" argument
# for example
paste("Ryan", "Safner", sep="") # no separation
paste("Ryan", "Safner", sep=" ") # separate with a space " " (the default)
paste("Ryan", "Safner", sep="_") # separate with underscore
# save the sequence as a vector called my_seq
my_seq <- seq(from = 1, # starting number
to = 100, # ending number
by = 2) # move from number to number by increments of 2
# get the mean
mean(my_seq)
renderthis::to_gif("panel_regression_cellularphone.html")
